import streamlit as st
import pandas as pd
import numpy as np
from bs4 import BeautifulSoup
import requests
import json
import re
st.set_page_config(page_title="CSV Analyzer", layout="wide")

st.title("üìä CSV Data Analyzer")

# Upload CSV file
uploaded_file = st.file_uploader("Ch·ªçn file CSV ƒë·ªÉ ph√¢n t√≠ch (Ch·ªâ d√πng cho l·∫•y s·∫£n ph·∫©m ·ªü Afffiliate)", type=["csv"])
def preprocess_sold_column(df):
    if 'Sold' in df.columns:
        df['Sold'] = df['Sold'].astype(str).str.replace('l∆∞·ª£t b√°n', '', regex=True).str.strip()
        df['Sold'] = df['Sold'].str.replace(',', '.')  # Thay d·∫•u ph·∫©y th√†nh d·∫•u ch·∫•m
        df['Sold'] = df['Sold'].apply(lambda x: float(x.replace('k', '')) * 1000 if 'k' in x else float(x) if x.replace('.', '', 1).isdigit() else np.nan)
    return df


if uploaded_file is not None:
    df = pd.read_csv(uploaded_file)
    
    # Display full dataframe with scroll
    st.subheader("üìå D·ªØ li·ªáu t·∫£i l√™n:")
    st.dataframe(df, height=500)
    
    # Processing options
    st.subheader("‚öôÔ∏è X·ª≠ l√Ω d·ªØ li·ªáu")
    
    if st.button("üìà Hi·ªÉn th·ªã th·ªëng k√™ m√¥ t·∫£"):
        st.write(df.describe())
    

    if st.button("L·ªçc d·ªØ li·ªáu"):
        df = preprocess_sold_column(df)
        st.write("### D·ªØ li·ªáu sau khi l·ªçc")
        st.dataframe(df, height=400)
    # Ch·ªçn c·ªôt ƒë·ªÉ copy d·ªØ li·ªáu
    column_to_copy = st.selectbox("Ch·ªçn c·ªôt ƒë·ªÉ sao ch√©p d·ªØ li·ªáu:", df.columns)
    row_range = st.text_input("Nh·∫≠p ph·∫°m vi d√≤ng (v√≠ d·ª•: 2,100):")
    
    if st.button("Sao ch√©p d·ªØ li·ªáu c·ªôt"):
        try:
            start, end = map(int, row_range.split(","))
            copied_text = ';'.join(df[column_to_copy].astype(str).iloc[start-1:end].tolist())
            st.text_area("D·ªØ li·ªáu ƒë√£ sao ch√©p:", copied_text, height=200)
        except:
            st.error("Vui l√≤ng nh·∫≠p ph·∫°m vi h·ª£p l·ªá (v√≠ d·ª•: 2,100)")
##############################################      


# Nh·∫≠p d·ªØ li·ªáu
search_values = st.text_area("Nh·∫≠p c√°c gi√° tr·ªã c·∫ßn t√¨m (ngƒÉn c√°ch b·∫±ng d·∫•u ;):")
    
if st.button("T√¨m v·ªã tr√≠"):
    if search_values:
        values_list = [val.strip() for val in search_values.split(";")]
        matched_indexes = []
            
        for val in values_list:
            matched_rows = df[df[column_to_copy].astype(str) == val].index.tolist()
            matched_indexes.extend(matched_rows)
            
        matched_indexes = sorted(set(matched_indexes))  # Lo·∫°i b·ªè tr√πng l·∫∑p v√† s·∫Øp x·∫øp
            
        if matched_indexes:
            st.write("### K·∫øt qu·∫£:")
            st.write(f"C√°c d√≤ng ch·ª©a gi√° tr·ªã t√¨m ki·∫øm: {matched_indexes}")
        else:
            st.warning("Kh√¥ng t√¨m th·∫•y gi√° tr·ªã n√†o trong c·ªôt ƒë√£ ch·ªçn.")
    else:
        st.error("Vui l√≤ng nh·∫≠p c√°c gi√° tr·ªã c·∫ßn t√¨m ki·∫øm!")
